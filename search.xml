<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[使用Markdown来编辑Evernote]]></title>
      <url>http://yoursite.com/2016/09/20/%E4%BD%BF%E7%94%A8Markdown%E6%9D%A5%E7%BC%96%E8%BE%91Evernote/</url>
      <content type="html"><![CDATA[<p>用过Evernote的人知道，其本身的编辑器简直惨不忍睹，对于我这种需要进行富文本写作和漂亮的排版之人来说，简直是叔叔能忍，婶婶不能忍……可我又确实中意它……，肿么办？  </p>
<p>我是个爱折腾的人，而且喜欢使用markdown进行写作，所以我决定折腾一下，用markdown来编辑Evernote！！！<br>下面是我捣鼓的过程……  </p>
<p>首先，作为一个中国人，我当然要去问度娘了……不出意料，网上已经有一些关于使用markdown编辑Evernote的资料了，看了简书、知乎和一些博客作者的做法，主要有以下两种：</p>
<ol>
<li><p>使用马克飞象，这是一个收费软件，口号是专为Evernote打造的markdown编辑器，有一段时间的试用期，我试验了下，确实挺好用的……而且简单粗暴，只要绑定你的Evernote账号即可本地编辑并同步到Evernote。</p>
</li>
<li><p>使用sublime text3来编辑Evernote，但这需要你自行安装相应插件并进行一些配置。虽然sublimetext3是收费软件，但它可以永久试用，只是会不时弹出一个对话框询问你是否愿意购买，但不用担心，这个弹出框的间隔时间很长，并不影响我们的使用，当然，如果你有强迫症……(∩_∩)</p>
</li>
</ol>
<p><em>作为一个重度sublime text3编辑器使用者，我当然毫不犹豫的选择折腾它了……&lt;(￣︶￣)&gt;，具体过程如下：</em></p>
<ol>
<li><p>你要安装Evernote插件，具体方法不再赘述，可自行百之谷之……这款插件可以让你在本地使用markdown写作，然后同步到你的Evernote账户，还可以在本地打开你的笔记，还有其他诸如更新，删除等等功能。当然，如果你使用的是桌面Evernote，你还需要同步到本地，才能看到你的笔记。</p>
</li>
<li><p>去Evernote网站获取应用授权<br><a href="https://app.yinxiang.com/api/DeveloperToken.action" target="_blank" rel="external">https://app.yinxiang.com/api/DeveloperToken.action</a><br><img src="./Evernote1.jpg" alt="evernote应用授权"></p>
</li>
<li><p>将获得的Developer Token和NoteStore URL写入配置文件<code>Preferences</code>&gt;&gt;<code>Package Settings</code>&gt;&gt;<code>Evernote</code>&gt;&gt;<code>Settings User</code></p>
 <figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"noteStoreUrl"</span>: <span class="string">"你的 NoteStore URL"</span>,</div><div class="line">    <span class="attr">"token"</span>: <span class="string">"你的 Developer Token"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<p><em>此时你就可以在sublime text3的命令模式中输入<code>Evernote</code>查看该插件的相关命令了</em></p>
<p><strong>但是到这里还没完哦……</strong></p>
<ol>
<li><p>接着安装Sublime Tmpl插件</p>
</li>
<li><p>配置markdown模板<br>通过<code>Preferences</code>&gt;&gt;<code>Browser Packages</code>打开<code>SublimeTmpl</code>文件夹中的<code>templates</code>文件夹，添加一个<code>md.tmpl</code>文件，用ST3打开，在其中加入：</p>
 <figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title:</div><div class="line">tags:</div><div class="line"><span class="section">notebook:</span></div><div class="line">---</div></pre></td></tr></table></figure>
</li>
</ol>
<p><strong>注意：</strong>Evernote插件目前只能识别<code>title</code>、<code>tags</code>、<code>notebook</code>这三个关键字，依次是文章标题，标签，所属笔记本。</p>
<ol>
<li><p>然后用sublime text3打开<code>SublimeTmpl</code>文件夹中的<code>Main.sublime-menu</code>文件，照猫画虎的加入如下内容：</p>
 <figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"caption"</span>: <span class="string">"md"</span>,</div><div class="line">    <span class="attr">"command"</span>: <span class="string">"sublime_tmpl"</span>,</div><div class="line">    <span class="attr">"args"</span>: &#123;</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"md"</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<p><em>现在，打开命令面板，输入<code>Evernote</code>,选择<code>New empty note</code>就可以以该模板创建一篇新的空笔记。你需要在添加文章的title、tags、notebook。</em></p>
<blockquote>
<h4 id="若是你觉得使用命令模式比较麻烦，你也可以在Preferences-gt-gt-Key-Bindings-User里自行配置一些快捷键"><a href="#若是你觉得使用命令模式比较麻烦，你也可以在Preferences-gt-gt-Key-Bindings-User里自行配置一些快捷键" class="headerlink" title="若是你觉得使用命令模式比较麻烦，你也可以在Preferences&gt;&gt;Key Bindings-User里自行配置一些快捷键"></a>若是你觉得使用命令模式比较麻烦，你也可以在<code>Preferences</code>&gt;&gt;<code>Key Bindings-User</code>里自行配置一些快捷键</h4></blockquote>
<p>For Evernote:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    "keys": ["super+e"],</div><div class="line">    "command": "show_overlay",</div><div class="line">    "args": &#123;"overlay": "command_palette", "text": "Evernote: "&#125;</div><div class="line">&#125;,</div><div class="line">&#123;</div><div class="line">    "keys": ["ctrl+e", "ctrl+s"],</div><div class="line">    "command": "send_to_evernote"</div><div class="line">&#125;,</div><div class="line">&#123;</div><div class="line">    "keys": ["ctrl+e", "ctrl+o"],</div><div class="line">    "command": "open_evernote_note"</div><div class="line">&#125;,</div><div class="line">&#123;</div><div class="line">    "keys": ["ctrl+e", "ctrl+u"],</div><div class="line">    "command": "save_evernote_note"</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>For md模板：</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"keys"</span>: [<span class="string">"ctrl+alt+m"</span>],</div><div class="line">    <span class="attr">"command"</span>: <span class="string">"sublime_tmpl"</span>,</div><div class="line">    <span class="attr">"args"</span>: &#123;<span class="attr">"type"</span>:<span class="string">"md"</span>&#125;,</div><div class="line">    <span class="attr">"context"</span>:[&#123;<span class="attr">"key"</span>:<span class="string">"sublime_tmpl.md"</span>&#125;]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<h4 id="附：Evernote命令及含义"><a href="#附：Evernote命令及含义" class="headerlink" title="附：Evernote命令及含义"></a>附：Evernote命令及含义</h4></blockquote>
<ul>
<li><p><code>Evernote: Send to Evernote</code></p>
</li>
<li><p><code>Evernote: Open Evernote Note</code> 直接在sublime text浏览并打开Evernote各个笔记本下的笔记，所有内容会自动以Markdown格式打开，其他文本格式，图片等附件均会被消除。</p>
</li>
<li><p><code>Evernote: Search Note</code> 笔记搜索功能，可以参考大象官方<a href="https://dev.evernote.com/doc/articles/search_grammar.php" target="_blank" rel="external">Developer文档</a>编辑自己的关键词语法。</p>
</li>
<li><p><code>Evernote: Update Evernote Note</code> 笔记编辑</p>
</li>
<li><p><code>Evernote: Attach current file to a note</code> 可将当前打开的文件嵌入正在编辑的笔记中</p>
</li>
<li><p><code>Evernote: Clip to Evernote as a new note</code> 将剪切板的内容直接作为新笔记创建出来</p>
</li>
<li><p><code>Evernote: View note in WebApp</code> 将当前笔记转入Evernote网页版打开</p>
</li>
</ul>
<blockquote>
<h4 id="附：个性化配置"><a href="#附：个性化配置" class="headerlink" title="附：个性化配置"></a>附：个性化配置</h4><p>我们可以利用Evernote插件进行更深入的个性化配置工作（<code>Preferences</code>&gt;&gt;<code>Package Settings</code>&gt;&gt; <code>Evernote</code>），比如：</p>
</blockquote>
<ul>
<li><p><code>md_syntax</code>: 定义md语法</p>
</li>
<li><p><code>inline_css</code>: 定义部分css元素样式，包括：pre, code, h1, hr, blockquote，sup</p>
</li>
<li><p><code>code_highlighting_style</code>: 提供了丰富的代码高亮样式，可定义的包括：autumn, default, github, monokai, perldoc, vim, borland, emacs, igor, murphy, rrt, vs, bw, friendly, native, tango, xcode, colorful, fruity, manni, pastie, trac</p>
</li>
<li><p><code>evernote_autocomplete</code>: 开启此项，后续所有笔记在加载时会自动补全笔记所属笔记本和标签</p>
</li>
<li><p><code>notes_order</code>: 使用以下条件对笔记进行排序：created, updated, relevance, update_sequence_number, title，或者通过‘notes_order_ascending’来对顺序进行颠倒</p>
</li>
</ul>
<hr>
<p>好了，上面我们利用ST3 + Evernote插件搭好了用markdown编辑Evernote的写作环境，可是还有一些小问题啊……</p>
<p>首先，一个很重要的问题就是我无法插入本地图片然后同步到Evernote，这是绝逼不能忍的啊，所以继续问度娘，嘿嘿……  &lt;(＾－＾)&gt;</p>
<p>可是看了不少度娘给的结果，比如简书，知乎，各种博客等等，居然没有我想要的答案……    ( ˇˍˇ )</p>
<p>无奈，只好上ST3的package control官网上瞧一瞧，结果看到了Evernote插件的介绍页上说，有问题就去看issues，虽然不知道这是个什么东东，但我还是抱着一丝希望点了进去，因为我要找与图片插入相关的信息嘛，很自然的，我输入了image进行搜索，然后选择issues的结果，居然真有我要的答案……(⊙▽⊙)</p>
<p><img src="./imageinsert1.jpg" alt=""><br><img src="./imageinsert2.jpg" alt=""></p>
<p>这里告诉了我们插入图片有两种方法：</p>
<ol>
<li><p>使用网络图片，你可以使用标准的markdown语法<code>![]()</code>，只需给出图片的URL即可，但有一个问题，如果网络上的图片资源没有了，或者URL变了，那我们就也就无法引用它了。</p>
</li>
<li><p>使用本地图片，如果你要插入本地图片，是不能使用markdown的，因为你会使用一个固定的本地路径，但是你用markdown写的笔记会被先转换为html然后发送到你的Evernote账户，这样你的图片URL就失效了。<strong>解决方法就是使用附件的形式</strong>，通过Evernote插件命令，在你希望插入图片的地方，选择<code>Insert Attachment Here</code>，然后输入图片的本地路径，此时会生成一个<code>&lt;en-media type=&quot;image/jpeg&quot; hash=&quot;……&quot;/&gt;</code>类似标签，就代表你要插入的图片。</p>
</li>
</ol>
<p>当然，issues里还有更多的关于插入图片的讨论，可自行前往查看……</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[经典语录]]></title>
      <url>http://yoursite.com/2016/09/17/%E7%BB%8F%E5%85%B8%E8%AF%AD%E5%BD%95/</url>
      <content type="html"><![CDATA[<p>&gt;<br>哈佛有一个著名的理论：人的差别在于业余时间，而一个人的命运决定于晚上8点到10点之间。每晚抽出2个小时的时间用来阅读、进修、思考或参加有意的演讲、讨论，你会发现，你的人生正在发生改变，坚持数年之后，成功会向你招手。不要每天抱着QQ/MSN/游戏/电影/肥皂剧……奋斗到12点都舍不得休息，看就看一些励志的影视或者文章，不要当作消遣；学会思考人生，学会感悟人生，慢慢的，你的人生将会发生变化……</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[星星点灯]]></title>
      <url>http://yoursite.com/2016/09/16/%E6%98%9F%E6%98%9F%E7%82%B9%E7%81%AF/</url>
      <content type="html"><![CDATA[<p><img src="./1-140ZGTQ6.jpg" alt="仰望星空" title="仰望星空"></p>
<blockquote class="blockquote-center"><p><strong>星星点灯</strong><br><em>郑智化</em></p>
<p>抬头的一片天　是男儿的一片天<br>曾经在满天的星光下做梦的少年<br>不知道天多高　不知道海多远<br>却发誓要带着你远走　到海角天边<br>不负责任的誓言　年少轻狂的我<br>在黑暗中迷失才发现自己的脆弱<br>看着你哭红的眼睛　想着远离的家门<br>满天的星星请为我点盏希望的灯火<br>星星点灯　照亮我的家门<br>让迷失的孩子　找到来时的路<br>星星点灯　照亮我的前程<br>用一点光　温暖孩子的心<br>现在的一片天　是肮脏的一片天<br>星星在文明的天空里再也看不见<br>天其实并不高　海其实也不远<br>人心其实比天高　比海更遥远<br>学会骗人的谎言　追逐名利的我<br>在现实中迷失才发现自己的脆弱<br>看着你含泪的离去　想着茫茫的前程<br>远方的星星请为我点盏希望的灯火<br>星星点灯　照亮我的家门<br>让迷失的孩子　找到来时的路<br>星星点灯　照亮我的前程<br>用一点光　温暖孩子的心<br><code>多年以后一场大雨惊醒沉睡的我</code><br><code>突然之间都市的霓虹都不再闪烁</code><br><code>天边有颗模糊的星光偷偷探出了头</code><br><code>是你的眼神依旧在远方为我在等候</code><br>星星点灯　照亮我的家门<br>让迷失的孩子找到来时的路<br>星星点灯　照亮我的前程<br>用一点光　温暖孩子的心</p>
</blockquote>
<p><img src="./paipai_audio_20220309444127243_88016_max.jpg" alt="希望就在远方"></p>
<blockquote>
<p>人的一生，难免会遇到气馁、彷徨、无助的时候，<br>坚持下去了，就会看到希望</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[php错误处理（二）]]></title>
      <url>http://yoursite.com/2016/09/11/php%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      <content type="html"><![CDATA[<h3 id="错误日志的记录问题"><a href="#错误日志的记录问题" class="headerlink" title="错误日志的记录问题"></a>错误日志的记录问题</h3><p><em>所谓错误日志，其实就是 错误报告，只是它会写入文件中，此时就叫错误日志。</em></p>
<ol>
<li>是否记录：</li>
</ol>
<ul>
<li>php.ini中：<code>log_errors = On 或 Off</code></li>
<li>脚本中：<code>ini_set(&quot;log_errors&quot;, 1 或 0);</code></li>
</ul>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ini_set(<span class="string">"php配置项"</span>, 值);    <span class="comment">//用于脚本中配置php.ini中某项的值，只作用于当前脚本。</span></div><div class="line">ini_get(<span class="string">"php配置项"</span>);    <span class="comment">//用于获取php中某配置项的值</span></div></pre></td></tr></table></figure>
<ol>
<li>记录到哪里(error_log)：</li>
</ol>
<ul>
<li>写法一：直接使用一个文件名，此时系统会自动在每个文件夹下都建立该文件，用于记录该文件夹下所有网页文件发生的错误信息。</li>
<li>写法二：使用一个特殊的名字<code>“syslog”</code>，则此时所有错误信息都会记录到系统的日志文件中(<code>控制面板--管理工具--事件查看器--Windows日志--应用程序</code>)</li>
</ul>
<blockquote>
<ul>
<li>php.ini中：<code>修改error_log</code></li>
<li>脚本中：<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ini_set(<span class="string">"error_log"</span>, <span class="string">"my_error.txt"</span>);</div><div class="line">ini_set(<span class="string">"error_log"</span>, <span class="string">"syslog"</span>);</div></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
<h3 id="自定义错误处理器："><a href="#自定义错误处理器：" class="headerlink" title="自定义错误处理器："></a>自定义错误处理器：</h3><p><em>错误处理器：就是一旦发生错误，用来处理该错误的一种机器——其实是一个函数。</em></p>
<p><strong>自定义错误处理器：</strong><br>    <em>让系统不要去处理错误了，而完全由开发者来对错误进行处理——显示和记录。</em></p>
<p><strong>做法：</strong><br>第一步：设定要用于处理错误的函数名<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">set_error_handler(<span class="string">"my_error_handler"</span>);</div></pre></td></tr></table></figure></p>
<p>第二步：去定义该函数<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">set_error_handler(<span class="string">"my_error_handler"</span>);</div><div class="line"><span class="comment">/**</span></div><div class="line"> * 自定义错误处理器，参数按顺序代表的含义是固定的，名字可以自己定义</div><div class="line"> * <span class="doctag">@param</span>  $errCode [错误代号]</div><div class="line"> * <span class="doctag">@param</span>  $errMsg  [错误内容]</div><div class="line"> * <span class="doctag">@param</span>  $errFile [错误文件]</div><div class="line"> * <span class="doctag">@param</span>  $errLine [错误行号]</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">my_error_handler</span><span class="params">($errCode, $errMsg, $errFile, $errLine)</span></span>&#123;</div><div class="line">    $str = <span class="string">""</span>;</div><div class="line">    $str .= <span class="string">"&lt;p&gt;错误："</span>;</div><div class="line">    $str .= <span class="string">"&lt;br /&gt;错误代号为："</span>.$errCode;</div><div class="line">    $str .= <span class="string">"&lt;br /&gt;错误信息为："</span>.$errMsg;</div><div class="line">    $str .= <span class="string">"&lt;br /&gt;错误文件为："</span>.$errFile;</div><div class="line">    $str .= <span class="string">"&lt;br /&gt;错误行号为："</span>.$errLine;</div><div class="line">    $str .= <span class="string">"&lt;br /&gt;发生错误时间为："</span>.date(<span class="string">"Y-m-d H:i:s"</span>);</div><div class="line">    $str .= <span class="string">"&lt;/p&gt;"</span>;</div><div class="line">    <span class="keyword">echo</span> $str;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[人生七耐]]></title>
      <url>http://yoursite.com/2016/09/10/%E4%BA%BA%E7%94%9F%E4%B8%83%E8%80%90/</url>
      <content type="html"><![CDATA[<img src="./194276-102.jpg" class="full-image">
<blockquote class="blockquote-center"><p><strong>人生七耐</strong><br><em>–东坡志林</em><br>人生，耐贫贱易，耐富贵难<br>安勤苦易，安闲散难<br>忍痛易，忍痒难<br>能耐富贵，安闲散，忍痒者<br>必有道之士也</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[php 数据库操作之PDO（一）]]></title>
      <url>http://yoursite.com/2016/09/10/php-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C%E4%B9%8BPDO%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      <content type="html"><![CDATA[<h3 id="数据库抽象层"><a href="#数据库抽象层" class="headerlink" title="数据库抽象层"></a>数据库抽象层</h3><hr>
<blockquote>
<h4 id="扩展类库"><a href="#扩展类库" class="headerlink" title="扩展类库"></a>扩展类库</h4></blockquote>
<p>在PHP的基础上进行了一些扩展，并且是以类的形式进行扩展的，多用C语言实现，因为PHP使用C语言实现的。<br>既然是扩展类库，那么在使用的时候就必须要把类实例化成对象。</p>
<blockquote>
<h4 id="PDO"><a href="#PDO" class="headerlink" title="PDO"></a>PDO</h4></blockquote>
<p><em>PDO（php data objece）</em>扩展类库为PHP访问数据库定义了轻量级的、一致性的接口。即不论使用何种数据库，只写一套标准SQL语句就可以通过一致的函数执行查询和获取数据</p>
<blockquote>
<h4 id="PDO的安装"><a href="#PDO的安装" class="headerlink" title="PDO的安装"></a>PDO的安装</h4></blockquote>
<ol>
<li>编辑php.ini文件(先确保php的bin/ext文件夹中有相应的pdo扩展文件)<br> <code>extention=php_pdo.dll</code><br> <code>extention=php_pdo_mysql.dll</code></li>
<li>重启Apache服务器</li>
<li>打开phpinfo.php查看是否有pdo (<code>ctrl + F</code>查找pdo)</li>
</ol>
<h3 id="创建PDO对象及与连接相关的设置"><a href="#创建PDO对象及与连接相关的设置" class="headerlink" title="创建PDO对象及与连接相关的设置"></a>创建PDO对象及与连接相关的设置</h3><hr>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">$dsn = <span class="string">'mysql:host=localhost;dbname=test'</span>;</div><div class="line">$user = <span class="string">'root'</span>;</div><div class="line">$password = <span class="string">''</span>;</div><div class="line"><span class="keyword">try</span>&#123;</div><div class="line">    $pdo = <span class="keyword">new</span> PDO($dsn, $user, $password);</div><div class="line">    <span class="comment">//var_dump($pdo);</span></div><div class="line">    <span class="comment">//设置错误处理模式，推荐为异常处理模式</span></div><div class="line">    $pdo-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);</div><div class="line">    <span class="comment">//设置是否关闭自动提交功能</span></div><div class="line">    $pdo-&gt;setAttribute(PDO::ATTR_AUTOCOMMIT, <span class="number">0</span>);</div><div class="line">    <span class="comment">//设置结果集返回格式一般设置为索引数组或关联数组，它们是最快的。</span></div><div class="line">    $pdo-&gt;setAttribute(PDO::ATTR_DEFAULT_FETCH_MODE, PDO::ASSOC);</div><div class="line">&#125;<span class="keyword">catch</span>(PDOException $e)&#123;</div><div class="line">    <span class="keyword">echo</span> <span class="string">'数据库连接失败：'</span> . $e-&gt;getMessage();</div><div class="line">    <span class="keyword">echo</span> <span class="string">'错误产生的文件：'</span> . $e-&gt;getFile();</div><div class="line">    <span class="keyword">echo</span> <span class="string">'错误行：'</span> . $e-&gt;getLine();</div><div class="line">    <span class="keyword">echo</span> <span class="string">'错误码：'</span> . $e-&gt;getCode();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<h4 id="设置php连接mysql时客户端字符集合连接字符集"><a href="#设置php连接mysql时客户端字符集合连接字符集" class="headerlink" title="设置php连接mysql时客户端字符集合连接字符集"></a>设置php连接mysql时客户端字符集合连接字符集</h4></blockquote>
<ul>
<li>方法一：<code>$pdo-&gt;exec(&quot;set names utf8&quot;);</code></li>
<li>方法二：<code>$pdo-&gt;query(&quot;set names utf8&quot;)</code><br><strong>注意：</strong><br>1 <em>实际开发项目时是不用写的，因为如果写了，每次用户连接数据库都会执行一次，从而降低数据库效率。</em><br>2 <em>实际开发时只需要保证编辑器的编码，数据库的字符校验集，HTML页面所使用的编码三者一致就肯定不会出现乱码。</em></li>
</ul>
<blockquote>
<h4 id="与连接相关的设置"><a href="#与连接相关的设置" class="headerlink" title="与连接相关的设置"></a>与连接相关的设置</h4></blockquote>
<p>格式：<code>$pdo-&gt;setAttribute(类名::常量, 类名::常量);</code></p>
<ul>
<li><p>错误模式——PDO::ATTR_ERRMODE</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">PDO::ERRMODE_SLIENT    <span class="comment">//不报错</span></div><div class="line">PDO::ERRMODE_WARNING    <span class="comment">//警告</span></div><div class="line">PDO::ERRMODE_EXCEPTION    <span class="comment">//异常处理方式，出现错误就抛出一个异常，推荐使用</span></div></pre></td></tr></table></figure>
</li>
<li><p>自动提交（用于事物处理）——PDO::ATTR_AUTOCOMMIT</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="number">0</span>    <span class="comment">//关闭自动提交</span></div><div class="line"><span class="number">1</span>    <span class="comment">//开启</span></div></pre></td></tr></table></figure>
</li>
<li><p>结果集返回格式——PDO::ATTR_DEFAULT_FETCH_MODE</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">PDO:FETCH_ASSOC    <span class="comment">//(关联数组)</span></div><div class="line">PDO:FETCH_NUM    <span class="comment">//（索引数组）</span></div><div class="line">PDO:FETCH_BOTH    <span class="comment">//（关联数组和索引数组）</span></div><div class="line">PDO:FETCH_OBJ    <span class="comment">//（对象）</span></div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ST3 之 Markdown编辑器]]></title>
      <url>http://yoursite.com/2016/09/08/ST3-%E4%B9%8B-Markdown%E7%BC%96%E8%BE%91%E5%99%A8/</url>
      <content type="html"><![CDATA[<h3 id="安装Markdown-Preview插件"><a href="#安装Markdown-Preview插件" class="headerlink" title="安装Markdown Preview插件"></a>安装Markdown Preview插件</h3><ul>
<li><p>用法:新建文件，后缀<code>.md</code><br><img src="./1.jpg" alt="Markdown Preview 使用" title="Markdown Preview use"></p>
</li>
<li><p>设置快捷键</p>
<blockquote>
<p><code>Preference</code>-&gt;<code>Key Bindings - User</code>中加入如下代码：</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"keys"</span>: [<span class="string">"alt+m"</span>],</div><div class="line">    <span class="attr">"command"</span>: <span class="string">"markdown_preview"</span>,</div><div class="line">    <span class="attr">"args"</span>: &#123;<span class="attr">"target"</span>: <span class="string">"browser"</span>, <span class="attr">"parser"</span>:<span class="string">"markdown"</span>&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>build</p>
<blockquote>
<p><code>Ctrl + B</code>可在当前目录生成html文件<br>在文件中插入<code>[TOC]</code>生成目录</p>
</blockquote>
</li>
</ul>
<h3 id="安装Markdown-Editing插件"><a href="#安装Markdown-Editing插件" class="headerlink" title="安装Markdown Editing插件"></a>安装Markdown Editing插件</h3><ul>
<li>自带三个主题，支持Markdown语法高亮，可在<code>Preference</code>-&gt;<code>Settings - More</code>-&gt;<code>Syntax Specific - User</code>和<code>Preference</code>-&gt;<code>Package Settings</code>-&gt;<code>Markdown Editing</code>-&gt;<code>GFM</code>中设置要使用的主题</li>
<li>在后者<code>GFM</code>中设置<code>&quot;wrap_width&quot;: 100</code>来改变编辑区左侧空白。</li>
<li>该插件还支持一些快速插入操作<br><img src="./2.jpg" alt="Markdown Editing" title="Markdown Editing"></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[php错误处理（一）]]></title>
      <url>http://yoursite.com/2016/09/08/php%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      <content type="html"><![CDATA[<h3 id="错误的分类："><a href="#错误的分类：" class="headerlink" title="错误的分类："></a>错误的分类：</h3><ol>
<li>语法错误：<br>程序运行之前，都要先检查语法，如果语法有错误，就会立即报错，并且不会去执行程序。</li>
<li>运行时错误：<br>语法检查通过后，运行程序时遇到的错误。通常分3种：<br><code>提示性错误</code> <code>警告性错误</code> <code>致命错误</code></li>
<li>逻辑错误：<br>程序可以正常执行，但执行结果出错了。</li>
</ol>
<h3 id="错误的分级："><a href="#错误的分级：" class="headerlink" title="错误的分级："></a>错误的分级：</h3><p><em>php语言中，将各种错误进行了不同级别的分类，并形成大约10几个级别的错误，这就是技术层面的错误分级。每一级别的错误，都有一个代号（系统内部的常量），如：</em></p>
<ol>
<li>系统常见错误：<blockquote>
<p><code>E_ERROR</code>    致命错误<br><code>E_WARNING</code>    警告性错误<br><code>E_NOTICE</code>    提示性错误</p>
</blockquote>
</li>
<li>用户可自定义的错误：<blockquote>
<p><code>E_USER_ERROR</code>    自定义致命错误<br><code>E_USER_WARNING</code>    自定义警告性错误<br><code>E_USER_NOTICE</code>    自定义提示性错误</p>
</blockquote>
</li>
<li>其他：<blockquote>
<p><code>E_STRICT</code>    严谨性语法检查错误<br><code>E_ALL</code>    代表“所有错误”</p>
</blockquote>
</li>
</ol>
<p><img src="1.jpg" alt="错误分级"></p>
<h3 id="错误的触发："><a href="#错误的触发：" class="headerlink" title="错误的触发："></a>错误的触发：</h3><ol>
<li>系统触发<br>系统触发的典型错误有这3种：<blockquote>
<p><code>E_ERROR</code>    致命错误（导致程序无法执行后续语句，如调用一个不存在的函数）<br><code>E_WARNING</code>    警告性错误（输出错误提示，并继续执行后续代码，比如载入一个不存在的文件）<br><code>E_NOTICE</code>    提示性错误（会输出错误提示，并继续执行后续代码，如使用了一个未定义变量）</p>
</blockquote>
</li>
<li>自定义触发</li>
</ol>
<p><em>当我们处理某些数据时，数据不满足我们要求的条件，我们就可以在程序中主动去触发（创建）一个错误，以表明该数据的“非法性”。</em></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span>(不满足条件)&#123;</div><div class="line">    trigger_error(<span class="string">"数据非法"</span>, E_USER_ERROR（<span class="number">3</span>种用户自定义错误代号之一）);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>E_USER_ERROR级别的错误也会终止后续语句的执行。</strong></p>
<h3 id="错误报告的显示问题（display-errors）："><a href="#错误报告的显示问题（display-errors）：" class="headerlink" title="错误报告的显示问题（display_errors）："></a>错误报告的显示问题（display_errors）：</h3><p><em>所谓错误报告，就是网页上的错误提示。设置是否显示错误报告：</em></p>
<ul>
<li>法一：在php.ini文件中设定<code>display_errors</code>的值为<code>on</code>（显示），或<code>off</code>（不显示）。</li>
</ul>
<blockquote>
<p>前提条件是Apache已经装载了php.ini文件，即在httpd.config中加入如下一行:<br><code>PHPIniDir  &quot;php.ini文件的路径(所在目录)&quot;;</code></p>
</blockquote>
<ul>
<li>法二：直接在php脚本文件中使用函数<code>ini_set()</code>设置<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ini_set(<span class="string">"display_errors"</span>,<span class="number">0</span> );    <span class="comment">// 1代表显示</span></div></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>注意：</p>
<ol>
<li>不管哪种形式，单词是一样的：<code>display_errors</code></li>
<li>使用php.ini设置，影响的是全局（即所有php网页）</li>
<li>在某个脚本代码中使用<code>ini_set()</code>设置，就只影响该脚本代码本身。</li>
<li>脚本中的设置优先于php.ini中的设置</li>
</ol>
</blockquote>
<h3 id="显示那些级别的错误报告-error-reporting"><a href="#显示那些级别的错误报告-error-reporting" class="headerlink" title="显示那些级别的错误报告(error_reporting)"></a>显示那些级别的错误报告(error_reporting)</h3><blockquote>
<p>前提是display_errors设置为On（或1）</p>
</blockquote>
<ul>
<li><p>法一：在php.ini文件中修改error_reporting的值，如：</p>
<blockquote>
<p><code>E_ALL | E_STRICT</code>    目前代表所有错误（php5.3中的缺陷，php5.4已修改，能真正代表所有错误）<br>真正的所有错误应该写为：<code>E_ERROR|E_STRICT</code><br><code>E_NOTICE</code>    只显示notice级别的错误<br><code>E_NOTICE|E_WARING|E_ERROR</code><br><code>E_ERROR|E_USER_ERROR</code></p>
</blockquote>
</li>
<li><p>法二：在当前脚本代码中用<code>ini_set()</code>函数设置,如：</p>
<blockquote>
<p><code>ini_set(&quot;error_reporting&quot;,E_NOTICE);</code><br><code>ini_set(&quot;error_reporting&quot;,E_NOTICE|E_WARNING|E_ERROR);</code></p>
</blockquote>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[部署实验]]></title>
      <url>http://yoursite.com/2016/09/06/%E9%83%A8%E7%BD%B2%E5%AE%9E%E9%AA%8C/</url>
      <content type="html"><![CDATA[<h3 id="这是对hexo-deploy的实验……"><a href="#这是对hexo-deploy的实验……" class="headerlink" title="这是对hexo deploy的实验……"></a>这是对hexo deploy的实验……</h3><a id="more"></a>
<p>在网上查了老半天，终于弄好了！exceting!</p>
<blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p>
<footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[rectangle setX: <span class="number">10</span> y:<span class="number">10</span> width:<span class="number">20</span> height:<span class="number">20</span>];</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[沟通很重要]]></title>
      <url>http://yoursite.com/2016/09/05/%E6%B2%9F%E9%80%9A%E5%BE%88%E9%87%8D%E8%A6%81/</url>
      <content type="html"><![CDATA[<blockquote>
<p>很多事情，你看到的听到的未必是你想象的那样<br><a id="more"></a><br>人生在世，多给别人解释的机会<br>我不问，你不说，这就是距离；<br>我问了，你不说，这就是隔阂；<br>我不问，你说了，这就是信任；<br>我问了，你说了，这就是尊重；<br>我想说，你想问，这就是默契。</p>
<p>心若亲近，言行必如流水般自然；<br>心若疏远，言行必如三秋之树般萧瑟。</p>
<p>不怕身隔天涯，只怕心在南北！<br>任何时候，沟通很重要。</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[PEAR的安装与使用]]></title>
      <url>http://yoursite.com/2016/09/03/PEAR%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<h2 id="在windows系统上用wampserver安装和测试PEAR"><a href="#在windows系统上用wampserver安装和测试PEAR" class="headerlink" title="在windows系统上用wampserver安装和测试PEAR"></a>在windows系统上用wampserver安装和测试PEAR</h2><h4 id="1-安装PEAR"><a href="#1-安装PEAR" class="headerlink" title="1. 安装PEAR"></a>1. 安装PEAR</h4><ul>
<li>先在<code>D:\wamp\</code>新增子目录pear</li>
<li>将<code>https://pear.php.net/go-pear.phar</code>保存为<code>go-pear.phar</code>，放在<code>d:\wamp\pear\</code>目录下</li>
<li>在cmd中进入pear目录，用php指令运行<code>go-pear.phar</code>如下：<blockquote>
<p><code>d:wamp\pear&gt;  D:\wamp\bin\php\php5.5.12\php.exe  go-pear.phar</code></p>
</blockquote>
</li>
<li>修改Apache安装目录中的php.ini文件，使 <code>include_path</code> 指向 <code>d:\wamp\pear\pear</code></li>
<li>参考：<a href="http://blog.sina.com.cn/s/blog_a0d0ec630101cs8k.html" target="_blank" rel="external">http://blog.sina.com.cn/s/blog_a0d0ec630101cs8k.html</a></li>
<li>成功安装PEAR目录结构如下：<br><img src="./pear.png" alt="pear目录结构" title="pear目录结构"></li>
</ul>
<a id="more"></a>
<h4 id="2-测试PEAR的安装"><a href="#2-测试PEAR的安装" class="headerlink" title="2. 测试PEAR的安装"></a>2. 测试PEAR的安装</h4><ul>
<li>进入cmd</li>
<li>进入PEAR安装目录<code>d:\wamp\pear</code></li>
<li>运行命令：<code>pear</code></li>
</ul>
<h4 id="3-程序包的安装"><a href="#3-程序包的安装" class="headerlink" title="3.程序包的安装"></a>3.程序包的安装</h4><ul>
<li>命令：<code>pear install 程序包名称</code><blockquote>
<p>如：<code>d:\wamp\pear&gt;  pear install Net_UserAgent_Detect</code></p>
</blockquote>
</li>
</ul>
<h4 id="4-附属程序包的安装"><a href="#4-附属程序包的安装" class="headerlink" title="4. 附属程序包的安装"></a>4. 附属程序包的安装</h4><ul>
<li><code>pear install --alldeps Net_UserAgent_Detect</code></li>
</ul>
<h4 id="5-程序包的卸载"><a href="#5-程序包的卸载" class="headerlink" title="5. 程序包的卸载"></a>5. 程序包的卸载</h4><ul>
<li><code>pear unintall Net_UserAgent_Detect</code></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://yoursite.com/2016/09/02/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<a id="more"></a>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
